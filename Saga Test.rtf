{\rtf1\ansi\ansicpg1251\cocoartf1404\cocoasubrtf470
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;\red53\green53\blue53;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}.}{\leveltext\leveltemplateid1\'02\'00.;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid1}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}}
\paperw11900\paperh16840\margl1440\margr1440\vieww23280\viewh13660\viewkind0
\deftab560
\pard\pardeftab560\slleading20\partightenfactor0

\f0\fs24 \cf2 \uc0\u1058 \u1077 \u1089 \u1090 \u1080 \u1084  Sagas (\u1055 \u1088 \u1080 \u1084 \u1077 \u1088  \u1074 \u1079 \u1103 \u1090  \u1089  VivaCity/UserSaga/ * userAvailabilityRemoveAttempt)\
\
const stepper = (fn) => (mock) => fn.next(mock).value;\
const api = API.create();\
userId = 777\
let SuccessResponce = \{\
  status: 200,\
  data: \{\
    msg: 'It is OK'\
  \}\
\}\
\
\
\uc0\u1053 \u1072 \u1084  \u1087 \u1086 \u1085 \u1072 \u1076 \u1086 \u1073 \u1080 \u1090 \u1089 \u1103 : Redux, Saga, SagaTest\
\pard\pardeftab560\pardirnatural\partightenfactor0
\ls1\ilvl0\cf2 {\listtext	1.	}\uc0\u1057 \u1084 \u1086 \u1090 \u1088 \u1080 \u1084  \u1074  \u1089 \u1072 \u1075 \u1077  \u1085 \u1072 \u1079 \u1074 \u1072 \u1085 \u1080 \u1077  \u1089 \u1072 \u1084 \u1086 \u1081  \u1089 \u1072 \u1075 \u1080 \
{\listtext	2.	}\uc0\u1057 \u1086 \u1079 \u1076 \u1072 \u1077 \u1084  step \
\
const step = stepper(userAvailabilityRemoveAttempt(api, Immutable(\{\
    availability: [\{\
      duration: 120,\
      active: true\
    \}],\
    position: 0\
  \})));\
\
\pard\pardeftab560\pardirnatural\partightenfactor0
\cf2 userAvailabilityRemoveAttempt - \uc0\u1085 \u1072 \u1079 \u1074 \u1072 \u1085 \u1080 \u1077  \u1089 \u1072 \u1075 \u1080 \
\uc0\u1089 \u1084 \u1086 \u1090 \u1088 \u1080 \u1084 , \u1089 \u1072 \u1075 \u1072  \u1087 \u1088 \u1080 \u1085 \u1080 \u1084 \u1072 \u1077 \u1090  api \u1080  action\
api \uc0\u1074 \u1074 \u1077 \u1088 \u1093 \u1091 , \u1072  action \u1084 \u1099  \u1092 \u1086 \u1088 \u1084 \u1080 \u1088 \u1091 \u1077 \u1084  (Immutable \u1085 \u1091 \u1078 \u1077 \u1085 , \u1090 .\u1082 . \u1089 \u1072 \u1075 \u1072  \u1084 \u1086 \u1078 \u1077 \u1090  \u1087 \u1086 \u1083 \u1100 \u1079 \u1086 \u1074 \u1072 \u1090 \u1100 \u1089 \u1103  \u1076 \u1072 \u1085 \u1085 \u1099 \u1084 \u1080  \u1082 \u1072 \u1082  Immutable \u1086 \u1073 \u1098 \u1077 \u1082 \u1090 \u1072 \u1084 \u1080 )\
\uc0\u1057 \u1084 \u1086 \u1090 \u1088 \u1080 \u1084 , \u1095 \u1090 \u1086  \u1087 \u1088 \u1080 \u1085 \u1080 \u1084 \u1072 \u1077 \u1090  Action \u1074  Redux \u1080  \u1076 \u1077 \u1083 \u1072 \u1077 \u1084  \u1087 \u1086 \u1093 \u1086 \u1078 \u1080 \u1081 \
\uc0\u1042 \u1089 \u1077 , step \u1089 \u1086 \u1079 \u1076 \u1072 \u1085 .\
\
\uc0\u1058 \u1077 \u1087 \u1077 \u1088 \u1100  \u1089 \u1084 \u1086 \u1090 \u1088 \u1080 \u1084 , \u1095 \u1090 \u1086  \u1076 \u1077 \u1083 \u1072 \u1077 \u1090  \u1057 \u1072 \u1075 \u1072 , \u1080  \u1080 \u1084 \u1080 \u1090 \u1080 \u1088 \u1091 \u1077 \u1084  \u1090 \u1086 \u1078 \u1077  \u1089 \u1072 \u1084 \u1086 \u1077 , \u1082 \u1072 \u1078 \u1076 \u1099 \u1081  yield \u1101 \u1090 \u1086  \u1086 \u1090 \u1076 \u1077 \u1083 \u1100 \u1085 \u1099 \u1081  step, \u1087 \u1077 \u1088 \u1074 \u1086 \u1077  \u1095 \u1090 \u1086  \u1076 \u1077 \u1083 \u1072 \u1077 \u1090  \u1089 \u1072 \u1075 \u1072  \u1101 \u1090 \u1086   yield select(getUserId);, \u1079 \u1085 \u1072 \u1095 \u1080 \u1090  \u1085 \u1072 \u1084  \u1085 \u1091 \u1078 \u1085 \u1086  \u1089 \u1076 \u1077 \u1083 \u1072 \u1090 \u1100  \u1089 \u1083 \u1077 \u1076 \u1091 \u1102 \u1097 \u1077 \u1077 : t.deepEqual(step(), select(getUserId));  (getUserId \u1074 \u1086 \u1079 \u1074 \u1088 \u1072 \u1097 \u1072 \u1077 \u1090  user id)\
\uc0\u1059 \u1088 \u1072 , \u1087 \u1077 \u1088 \u1074 \u1099 \u1081  \u1090 \u1077 \u1089 \u1090  \u1087 \u1088 \u1086 \u1081 \u1076 \u1077 \u1085 \
\
\uc0\u1058 \u1077 \u1087 \u1077 \u1088 \u1100  \u1089 \u1084 \u1086 \u1090 \u1088 \u1080 \u1084  \u1082 \u1072 \u1082 \u1086 \u1081  yield \u1074 \u1099 \u1087 \u1086 \u1083 \u1085 \u1103 \u1077 \u1090 \u1089 \u1103  \u1089 \u1083 \u1077 \u1076 \u1091 \u1102 \u1097 \u1080 \u1084  (\u1090 \u1077 \u1087 \u1077 \u1088 \u1100  \u1074  step(userId) \u1087 \u1077 \u1088 \u1077 \u1076 \u1072 \u1077 \u1084 , \u1090 \u1086  \u1095 \u1090 \u1086  \u1087 \u1086 \u1083 \u1091 \u1095 \u1080 \u1083 \u1080  \u1074  \u1087 \u1088 \u1077 \u1076 \u1099 \u1076 \u1091 \u1097 \u1077 \u1084  \u1090 .\u1077 . user id, userId \u1079 \u1072 \u1076 \u1072 \u1077 \u1084  \u1089 \u1072 \u1084 \u1080 )\
\
yield select(getToken); \uc0\u1074  \u1090 \u1077 \u1089 \u1090 \u1072 \u1093  \u1087 \u1080 \u1096 \u1077 \u1084    t.deepEqual(step(userId), select(getToken));\
\
\uc0\u1057 \u1083 \u1077 \u1076 \u1091 \u1102 \u1097 \u1080 \u1081   yield call(api.updateUserAvailability, userId, removeFromAvailability(action.availability, action.position), \{ token \});\
\uc0\u1058 \u1091 \u1090  \u1084 \u1099  \u1074 \u1099 \u1087 \u1086 \u1083 \u1085 \u1103 \u1077 \u1084  \u1079 \u1072 \u1087 \u1088 \u1086 \u1089  \u1089 \u1084 \u1086 \u1090 \u1088 \u1080 \u1084  \u1082 \u1072 \u1082 \u1080 \u1077  \u1087 \u1072 \u1088 \u1072 \u1084 \u1077 \u1090 \u1088 \u1099  \u1087 \u1077 \u1088 \u1077 \u1076 \u1072 \u1102 \u1090 \u1089 \u1103  \u1080  \u1076 \u1077 \u1083 \u1072 \u1084  \u1090 \u1086 \u1078 \u1077  \u1089 \u1072 \u1084 \u1086 \u1077 \
 \
  t.deepEqual(step(token), call(api.updateUserAvailability, userId, Immutable([]), \{\
    token\
  \}));\
\
removeFromAvailability(action.availability, action.position) \uc0\u1074 \u1086 \u1079 \u1074 \u1088 \u1072 \u1097 \u1072 \u1077 \u1090  \u1084 \u1072 \u1089 \u1089 \u1080 \u1074 , \u1074  \u1082 \u1086 \u1090 \u1086 \u1088 \u1086 \u1084  \u1091 \u1076 \u1072 \u1083 \u1077 \u1085 \u1072  \u1079 \u1072 \u1087 \u1080 \u1089 \u1100  position: 0 ,\u1082 \u1086 \u1090 \u1086 \u1088 \u1091 \u1102  \u1084 \u1099  \u1087 \u1077 \u1088 \u1077 \u1076 \u1072 \u1083 \u1080  \u1074  step, \u1090 .\u1082 . \u1091  \u1085 \u1072 \u1089  \u1073 \u1099 \u1083 \u1072  \u1074 \u1089 \u1077 \u1075 \u1086  \u1086 \u1076 \u1085 \u1072  \u1079 \u1072 \u1087 \u1080 \u1089 \u1100 , \u1084 \u1072 \u1089 \u1089 \u1080 \u1074  \u1086 \u1082 \u1072 \u1079 \u1072 \u1083 \u1089 \u1103  \u1087 \u1091 \u1089 \u1090 \u1086 \u1081 \
Immutable([]), \uc0\u1085 \u1091  \u1080  \u1090 \u1086 \u1082 \u1077 \u1085  \u1091  \u1085 \u1072 \u1089  \u1085 \u1077  \u1084 \u1077 \u1085 \u1103 \u1083 \u1089 \u1103 , \u1090 \u1072 \u1082 \u1080 \u1084  \u1086 \u1073 \u1088 \u1072 \u1079 \u1086 \u1084  \u1091  \u1085 \u1072 \u1089  \u1076 \u1086 \u1083 \u1078 \u1077 \u1085  \u1074 \u1099 \u1087 \u1086 \u1083 \u1085 \u1080 \u1090 \u1100 \u1089 \u1103  3\u1081  \u1090 \u1077 \u1089 \u1090 \
\
\uc0\u1053 \u1091  \u1080  \u1085 \u1072 \u1082 \u1086 \u1085 \u1077 \u1094  \u1074  \u1089 \u1083 \u1091 \u1095 \u1072 \u1077  Success \u1076 \u1086 \u1083 \u1078 \u1077 \u1085  \u1074 \u1099 \u1087 \u1086 \u1083 \u1085 \u1080 \u1090 \u1100 \u1089 \u1103  yield put(UserActions.userAvailabilityRemoveSuccess());\
\uc0\u1042  \u1090 \u1077 \u1089 \u1090 \u1072 \u1093  \u1087 \u1080 \u1096 \u1077 \u1084  \
\
t.deepEqual(step(SuccessResponce), put(UserActions.userAvailabilityRemoveSuccess()))\
\
\uc0\u1058 \u1072 \u1082  \u1082 \u1072 \u1082  \u1091  SuccessResponce \u1077 \u1089 \u1090 \u1100  \u1087 \u1086 \u1083 e status: 200, \u1074  \u1089 \u1072 \u1075 \u1077  \u1074 \u1099 \u1087 \u1086 \u1083 \u1085 \u1080 \u1090 \u1089 \u1103  yield put(UserActions.userAvailabilityRemoveSuccess()); \u1074  \u1080 \u1090 \u1086 \u1075 \u1077  \u1074 \u1089 \u1077  yield \u1087 \u1088 \u1086 \u1074 \u1077 \u1088 \u1077 \u1085 \u1099  \u1080  \u1074 \u1089 \u1077  \u1090 \u1077 \u1089 \u1090 \u1099  \u1087 \u1088 \u1086 \u1081 \u1076 \u1077 \u1085 \u1099  =)\
\
\uc0\u1050 \u1086 \u1085 \u1077 \u1095 \u1085 \u1099 \u1081  \u1090 \u1077 \u1089 \u1090 :\
\
test('userAvailabilityRemoveAttempt - success', t => \{\
  const userId = 1\
  const step = stepper(userAvailabilityRemoveAttempt(api, Immutable(\{\
    availability: [\{\
      duration: 120,\
      active: true\
    \}],\
    position: 0\
  \})));\
\
  t.deepEqual(step(), select(getUserId));\
  t.deepEqual(step(userId), select(getToken));\
  t.deepEqual(step(token), call(api.updateUserAvailability, userId, Immutable([]), \{\
    token\
  \}));\
  t.deepEqual(step(SuccessResponce), put(UserActions.userAvailabilityRemoveSuccess()))\
\});\
\
																																				\uc0\u1040 \u1088 \u1090 \u1077 \u1084  \u1050 \u1086 \u1089 \u1103 \u1082 \u1077 \u1074 \u1080 \u1095  2016\
\
\
}